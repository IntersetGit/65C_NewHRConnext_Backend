// Prisma schema file.
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/client"
}

// model Post {
//   id        Int      @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   title     String   @db.VarChar(255)
//   content   String?
//   published Boolean  @default(false)
//   author    User     @relation(fields: [authorId], references: [id])
//   authorId  Int
// }
model Company {
  id                      String               @unique @db.Uuid
  name                    String               @db.VarChar(255)
  companyCode             String               @unique
  userlimit               Int                  @default(0)
  company_registration_id String?
  company_vat_id          String?
  icon                    String?
  createdAt               DateTime             @default(now())
  updatedAt               DateTime             @updatedAt
  ownerId                 String               @db.Uuid
  owner                   User                 @relation(fields: [ownerId], references: [id])
  branch                  CompanyBranch[]
  mas_positionlevel3      mas_positionlevel3[]
  mas_positionlevel2      mas_positionlevel2[]
  mas_positionlevel1      mas_positionlevel1[]
  holiday_date            holiday_date[]
  mas_position            mas_position[]
}

model CompanyBranch {
  id                String         @unique @db.Uuid
  isMainbranch      Boolean        @default(false)
  name              String         @db.VarChar(255)
  address           String         @db.VarChar(255)
  address_2         String?        @db.VarChar(255)
  city              String         @db.VarChar(255)
  state             String         @db.VarChar(255)
  zip               String         @db.VarChar(255)
  country           String?        @db.VarChar(255)
  tel               String?        @db.VarChar(255)
  fax               String?        @db.VarChar(255)
  website           String?        @db.VarChar(255)
  lat               String?
  lng               String?
  email             String?
  email_2           String?
  company_type      String?
  sub_company_type  String?
  registeredamount  String?
  social_facebook   String?
  social_likedin    String?
  social_instragram String?
  social_line       String?
  createdAt         DateTime       @default(now())
  updatedAt         DateTime       @updatedAt
  company           Company?       @relation(fields: [companyId], references: [id])
  companyId         String?        @db.Uuid
  users             User[]
  Role_Company      Role_Company[]
}

model Profile {
  id                     String    @unique @db.Uuid
  bio                    String?
  firstname_th           String?   @db.VarChar(255)
  lastname_th            String?   @db.VarChar(255)
  firstname_en           String?   @db.VarChar(255)
  lastname_en            String?   @db.VarChar(255)
  avatar                 String?
  dob                    DateTime?
  age                    String?
  relationship           String?
  shirt_size             String?
  prefix_th              String?
  prefix_en              String?
  citizen_id             String?
  social_id              String?
  staff_status           String?
  tel                    String?
  address                String?
  gender                 String?
  staff_code             String?   @unique
  religion               String?
  user                   User      @relation(fields: [userId], references: [id])
  userId                 String    @unique @db.Uuid
  citizen_addressnumber  String?
  citizen_address        String?
  citizen_country        String?
  citizen_province       String?
  citizen_district       String?
  citizen_state          String?
  citizen_zipcode        String?
  citizen_tel            String?
  contract_sameCitizen   Boolean   @default(false)
  contract_addressnumber String?
  contract_address       String?
  contract_country       String?
  contract_province      String?
  contract_district      String?
  contract_state         String?
  contract_zipcode       String?
  contract_email         String?
  contract_companyemail  String?
  social_facebook        String?
  social_likedin         String?
  social_line            String?
  social_telegram        String?
}

model User {
  id              String          @unique @db.Uuid
  email           String          @unique
  password        String
  profile         Profile?
  islogin         Boolean         @default(false)
  isActive        Boolean         @default(false)
  isOwner         Boolean         @default(false)
  lastlogin       DateTime?       @updatedAt
  createdAt       DateTime        @default(now())
  roleId          String?         @db.Uuid
  role            Role?           @relation(fields: [roleId], references: [id])
  RoleCompanyID   String?         @db.Uuid
  company         Company[]
  companyBranch   CompanyBranch?  @relation(fields: [companyBranchId], references: [id])
  companyBranchId String?         @db.Uuid
  Role_Company    Role_Company?   @relation(fields: [RoleCompanyID], references: [id])
  Position_user   Position_user[]
}

model Role {
  id    String @unique @db.Uuid
  name  String @db.VarChar(255)
  users User[]
}

model Role_Company {
  id              String         @unique @db.Uuid
  name            String         @db.VarChar(255)
  access          Json
  status          Int
  users           User[]
  companyBranch   CompanyBranch? @relation(fields: [companyBranchId], references: [id])
  companyBranchId String?        @db.Uuid
}

model Province {
  id       String     @unique @db.Uuid
  name     String
  district District[]
}

model District {
  id         String   @unique @db.Uuid
  name       String
  provinceId String   @db.Uuid
  province   Province @relation(fields: [provinceId], references: [id])
  amphoe     Amphoe[]
}

model Amphoe {
  id         String   @unique @db.Uuid
  name       String
  districtId String   @db.Uuid
  zipcode    String?
  district   District @relation(fields: [districtId], references: [id])
}

model mas_position {
  id                 String               @unique @db.Uuid
  name               String
  level              Int                  @db.SmallInt
  Company            Company?             @relation(fields: [CompanyId], references: [id])
  CompanyId          String?              @db.Uuid
}

model mas_positionlevel1 {
  id                 String               @unique @db.Uuid
  name               String
  level              Int                  @db.SmallInt
  code               String
  type               String
  mas_positionlevel2 mas_positionlevel2[]
  Company            Company?             @relation(fields: [CompanyId], references: [id])
  CompanyId          String?              @db.Uuid
  Position_user      Position_user[]
}

model mas_positionlevel2 {
  id                 String               @unique @db.Uuid
  name               String
  level              Int                  @db.SmallInt
  code               String
  type               String
  positionlevel1_id  String?              @db.Uuid
  mas_positionlevel1 mas_positionlevel1?  @relation(fields: [positionlevel1_id], references: [id])
  mas_positionlevel3 mas_positionlevel3[]
  Company            Company?             @relation(fields: [CompanyId], references: [id])
  CompanyId          String?              @db.Uuid
  position_user      Position_user[]
}

model mas_positionlevel3 {
  id                 String              @unique @db.Uuid
  name               String
  level              Int                 @db.SmallInt
  code               String
  type               String
  positionlevel2_id  String?             @db.Uuid
  mas_positionlevel2 mas_positionlevel2? @relation(fields: [positionlevel2_id], references: [id])
  Company            Company?            @relation(fields: [CompanyId], references: [id])
  CompanyId          String?             @db.Uuid
  Position_user      Position_user[]
}

model Position_user {
  id                 String              @unique @db.Uuid
  user_id            String?             @db.Uuid
  position1_id       String?             @db.Uuid
  position2_id       String?             @db.Uuid
  position3_id       String?             @db.Uuid
  role               String?
  leader             String?
  user               User?               @relation(fields: [user_id], references: [id])
  mas_positionlevel1 mas_positionlevel1? @relation(fields: [position1_id], references: [id])
  mas_positionlevel2 mas_positionlevel2? @relation(fields: [position2_id], references: [id])
  mas_positionlevel3 mas_positionlevel3? @relation(fields: [position3_id], references: [id])
}

model holiday_date {
  id           String   @unique @db.Uuid
  holiday_name String?
  day          Int
  month        Int
  yaer         Int
  Company      Company? @relation(fields: [CompanyId], references: [id])
  CompanyId    String?  @db.Uuid
}

model holiday_year {
  id                String    @unique @db.Uuid
  day               Int
  month             Int
  year              Int
  holiday_name      String?    
}
